/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package utfpr.edu.br.forms;

import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static org.hibernate.criterion.Expression.sql;
import utfpr.edu.br.FamiliaJpaController;
import utfpr.edu.br.conexao.TransactionUtil;
import utfpr.edu.br.dao.DaoFamilia;
import utfpr.edu.br.dao.DaoProduto;
import utfpr.edu.br.dao.DaoUnidade;
import utfpr.edu.br.model.Familia;
import utfpr.edu.br.model.Produto;
import utfpr.edu.br.model.Unidade;
import utfpr.edu.br.util.Util;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParsePosition;
import java.util.Locale;
import javax.persistence.EntityManager;
import utfpr.edu.br.SetorJpaController;
import utfpr.edu.br.dao.DaoSetor;
import utfpr.edu.br.model.Setor;

/**
 *
 * @author aluno
 */
public class FrmProdutos extends javax.swing.JFrame {

    /**
     * Creates new form FrmProdutos
     */
    private DefaultTableModel model;
    private String dadosProdutos[] = new String[]{"Id","Descricao","Codigo de Barras", "Peso Bruto","Peso Liquido","Estoque Minimo","Familia","Tipo Unidade","Quantidade do Estoque", "Setor"};
    private List<Produto> produto;
    private List<String> fami;
    public FrmProdutos() {
        initComponents();
        iniciar();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbProduto = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtBruto = new javax.swing.JFormattedTextField();
        txtLiquido = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        cbFamilia = new javax.swing.JComboBox<>();
        cbUnidade = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMinimo = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JFormattedTextField();
        btnInserir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtCodigoBarras = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbProduto);

        jLabel1.setText("Id *");

        txtId.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        jLabel2.setText("Descrição");

        jLabel3.setText("Peso Bruto");

        txtBruto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        txtLiquido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jLabel4.setText("Peso Liquido");

        cbFamilia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "carnes", "linguiça", "paes", "bolos", "sabão em pó", "frutas", " " }));
        cbFamilia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFamiliaActionPerformed(evt);
            }
        });

        cbUnidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FRACIONADO", "UN", "METRO", "PESO", "BARRIL", "CAIXA", "SACO", "ENGRADADO", "LITRO", " ", " " }));

        jLabel5.setText("Familia");

        jLabel6.setText("Unidade");

        txtMinimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel7.setText("Estoque Minimo");

        jLabel8.setText("Quantidade Estoque");

        txtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        jLabel9.setText("Codigo de Barras *");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)
                        .addGap(68, 68, 68)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMinimo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(txtCodigoBarras))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(btnInserir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAtualizar))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBruto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInserir)
                            .addComponent(btnLimpar)
                            .addComponent(btnAtualizar)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtDescricao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(txtId, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        
        
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void cbFamiliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFamiliaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFamiliaActionPerformed

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        // TODO add your handling code here:
        insert();
    }//GEN-LAST:event_btnInserirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmProdutos().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JComboBox<String> cbFamilia;
    private javax.swing.JComboBox<String> cbUnidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbProduto;
    private javax.swing.JFormattedTextField txtBruto;
    private javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JFormattedTextField txtId;
    private javax.swing.JFormattedTextField txtLiquido;
    private javax.swing.JFormattedTextField txtMinimo;
    private javax.swing.JFormattedTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
      void p_tabela()
    {
        model = new DefaultTableModel();

        model.setColumnIdentifiers(dadosProdutos);
        Familia f = new Familia();
        Unidade u = new Unidade();
        Setor setor = new Setor();
        if (produto != null || produto.isEmpty()) {
            for (Produto s : produto) {
                f = family(s.getFkFamilia());
                u = unit(s.getFkUnidade());
                setor = buscarSetor(f.getFkSetor());
                model.addRow(new Object[]{
                    
                    s.getId(),
                    s.getDescricao(),
                    s.getCodigoBarras(),
                    s.getPesoBruto(),
                    s.getPesoLiquido(),
                    s.getEstoqueMinino(),
                    f.getDescricao(),
                    u.getTipo(),
                    s.getQuantidade(),
                    setor.getDescricao()
                    
                });
            }
            tbProduto.setModel(model);
        } else {
            model = new DefaultTableModel();
            model.setColumnIdentifiers(dadosProdutos);
            tbProduto.setModel(model);
        }
    }
  
    void iniciar()
    {
        produto = new DaoProduto().listar();
        if (produto != null)
        {
            p_tabela();
        }
        
    }
    private Familia family(int a)
    {
        Familia p = new Familia();
        DaoFamilia f = new DaoFamilia();
        p = f.obterId(a);
        return p;
    }

    private Unidade unit(Integer fkUnidade) {
        Unidade u = new Unidade();
        DaoUnidade d = new DaoUnidade();
        u = d.obterId(fkUnidade);
        
        return u;
    }
    private Setor buscarSetor(Integer fkSetor)
    {
        
        Setor s = new Setor();
        DaoSetor dao = new DaoSetor();
        s = dao.obterPorId(fkSetor);
        return s;
        
    }
    private void insert()
    {
        Locale in_ID = new Locale("in","ID");
        DecimalFormat nf = (DecimalFormat)NumberFormat.getInstance(in_ID);
        nf.setParseBigDecimal(true);
        Produto f = new Produto();
      
        if (!txtId.getText().isEmpty() && !txtCodigoBarras.getText().isEmpty()) 
        {  //verifica se o campo Codigo esta vazio
                f.setId(Integer.parseInt(txtId.getText().trim()));
                f.setCodigoBarras(txtCodigoBarras.getText());
        f.setDescricao(txtDescricao.getText());
        f.setEstoqueMinino(Integer.parseInt(txtMinimo.getText().trim()));
        f.setFkFamilia(cbFamilia.getSelectedIndex());
        f.setFkUnidade(cbUnidade.getSelectedIndex());
        BigDecimal bruto = (BigDecimal)nf.parse(txtBruto.getText(), new ParsePosition(0));
        f.setPesoBruto(bruto);
        BigDecimal liquido = (BigDecimal)nf.parse(txtLiquido.getText(), new ParsePosition(0));
        f.setPesoLiquido(liquido);
        f.setQuantidade(Integer.parseInt(txtQuantidade.getText()));

        TransactionUtil.beginTransaction();
            try {
                new DaoProduto().persistir(f);
                TransactionUtil.commit();
                JOptionPane.showMessageDialog(null, "Cadastrado Com sucesso","Messagem", JOptionPane.INFORMATION_MESSAGE, null);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Erro ao persistir no banco:  "+ ex.getMessage(),"Messagem", JOptionPane.ERROR_MESSAGE, null);
                TransactionUtil.rollback();
                Logger.getLogger(FrmFornecedor.class.getName()).log(Level.SEVERE, null, ex);//erro
               
            }
            
            
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Peencha os campos Obrigatorios");
        }
        novo();

    }
    void atualizar()
     {
        Produto p = new Produto();
        if (!txtId.getText().isEmpty()) 
        {  //verifica se o campo Codigo esta vazio
                p.setId(Integer.parseInt(txtId.getText()));
        }
        
        p.setDescricao(txtDescricao.getText().trim());
        
        TransactionUtil.beginTransaction();
            try {
                new DaoProduto().atualizar(p);
                TransactionUtil.commit();
            } catch (Exception ex) {
                TransactionUtil.rollback();
                Logger.getLogger(FrmSetor.class.getName()).log(Level.SEVERE, null, ex);//erro
            }
           
                    txtId.setEditable(true);
                    
     }
    private void remover() {
        if (!txtId.getText().isEmpty()) {
            int id = Integer.parseInt(txtId.getText().trim());
            try {
                TransactionUtil.beginTransaction();
                DaoProduto dao = new DaoProduto();
                dao.remover(dao.obterPorId(id));
                TransactionUtil.commit();
            } catch (Exception e) {
                TransactionUtil.rollback();
                Util.dispayMsg("erro Inesperado!");
                Logger.getLogger(FrmSetor.class.getName()).log(Level.SEVERE, null, e);//erro
            }
            novo();
        } 
        else 
        {
            JOptionPane.showMessageDialog(rootPane, "Nenhum registro selecionando !");
        }
        novo();
    }
    void novo()
    {
        txtId.setText("");
        txtDescricao.setText("");
        txtBruto.setText("");
        txtLiquido.setText("");
        txtQuantidade.setText("");
        txtCodigoBarras.setText("");
        txtMinimo.setText("");

        iniciarTabela();

    }
    private void iniciarTabela() {
        produto = new DaoProduto().listar();
        if (produto != null) {
            p_tabela();
        }
    }
    /*
    public static ComboBoxModel caregarFalimia(){
        List lsFamilia = null;
        //Classe de persistencia
        Familia ufX = new Familia();
        ComboBoxModel bRetorno;
        Vector v = new Vector();
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("utfpr.edu.brPU");;
        
        //DAO
        FamiliaJpaController UFJPA = new FamiliaJpaController(emf);
        lsFamilia = UFJPA.findFamiliaEntities();
        v.add(null);
        for (Object item : lsFamilia) {
            //Lê cada item retornado pelo SELECT e adiciona o Nome do estado ao vector
            ufX = (Familia)item;
            v.add(ufX.getDescricao());
        }
        bRetorno = new DefaultComboBoxModel(v);
        return bRetorno;
    }
      
      */  
    

}
